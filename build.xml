<?xml version="1.0" encoding="UTF-8"?>
<project name="ProyectoFFCV_FASE2" default="default" basedir=".">
    <description>Builds, tests, and runs the project ProyectoFFCV.</description>
    <import file="nbproject/build-impl.xml"/>

    <!-- Define propiedades explícitamente -->
    <property name="build.test.classes.dir" value="${basedir}/build/test/classes"/>
    <property name="build.classes.dir" value="${basedir}/build/classes"/>
    <property name="junit5.lib" value="${basedir}/lib/junit5"/>
    <property name="test.src.dir" value="${basedir}/test"/>
    <property name="javafx.lib" value="${basedir}/lib/JavaFX"/>
    <property name="lib.dir" value="${basedir}/lib"/> <!-- Define el directorio de librerías -->

    <!-- Define el classpath para JUnit 5 -->
    <path id="test.classpath">
        <pathelement location="${build.test.classes.dir}"/>
        <pathelement location="${build.classes.dir}"/>
        <pathelement location="${junit5.lib}/junit-platform-console-standalone-1.10.0.jar"/>
        <fileset dir="${lib.dir}">
            <include name="mysql-connector-j-9.2.0.jar"/> <!-- driver de MySQL -->
        </fileset>
    </path>

    <!-- Define el classpath para ejecución con JavaFX -->
    <path id="run.classpath">
        <pathelement path="${build.classes.dir}"/>
        <fileset dir="${javafx.lib}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="lib">
            <include name="*.jar"/> <!-- Include MySQL driver, etc. -->
        </fileset>
    </path>

    <!-- Override run.test.classpath to use JUnit 5 only -->
    <target name="-pre-init">
        <property name="run.test.classpath" value="${toString:test.classpath}"/>
    </target>

    <!-- Personaliza la compilación de un solo archivo de prueba -->
    <target name="compile-test-single" depends="init,compile">
        <mkdir dir="${build.test.classes.dir}"/>
        <javac srcdir="${test.src.dir}"
               destdir="${build.test.classes.dir}"
               classpathref="test.classpath"
               includeantruntime="false"
               includes="${javac.includes}">
            <compilerarg value="--add-modules=ALL-SYSTEM"/>
            <classpath refid="test.classpath"/>
        </javac>
    </target>

    <!-- Personaliza la ejecución de todas las pruebas -->
    <target name="test" depends="-do-compile-test">
        <echo message="Test classpath: ${toString:test.classpath}"/>
        <java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
            <classpath refid="test.classpath"/>
            <jvmarg value="--add-modules=ALL-SYSTEM"/>
            <arg value="--scan-classpath"/>
            <arg value="--include-classname=.*Test"/>
            <arg value="--reports-dir=${build.test.results.dir}"/>
        </java>
    </target>
        
    <!-- Personaliza la ejecución de una sola prueba -->
    <target name="test-single" depends="compile-test-single">
        <echo message="Test classpath: ${toString:test.classpath}"/>
        <java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
            <classpath refid="test.classpath"/>
            <jvmarg value="--add-modules=ALL-SYSTEM"/>
            <arg value="--select-class=${test.class}"/>
            <arg value="--reports-dir=${build.test.results.dir}"/>
        </java>
    </target>

    <!-- Personaliza la ejecución de un solo método de prueba en modo debug -->
    <target name="debug-single-method" depends="compile-test-single">
        <fail unless="test.class">Must select a test class (e.g., set test.class)</fail>
        <fail unless="test.method">Must select a test method (e.g., set test.method)</fail>
        <echo message="Debugging single method with classpath: ${toString:test.classpath}"/>
        <java classname="org.junit.platform.console.ConsoleLauncher" fork="true" failonerror="true">
            <classpath refid="test.classpath"/>
            <jvmarg value="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"/>
            <jvmarg value="--add-modules=ALL-SYSTEM"/>
            <arg value="--select-class=${test.class}"/>
            <arg value="--select-method=${test.method}"/>
            <arg value="--reports-dir=${build.test.results.dir}"/>
        </java>
    </target>
    
    <target name="-pre-jar">
        <copy todir="${build.classes.dir}">
            <fileset dir="lib" includes="*.jar"/>
        </copy>
    </target>

    <!-- Updated run-single target with JavaFX support -->
    <target name="run-single" depends="compile-single">
        <java classname="${run.class}" fork="true">
            <jvmarg value="--module-path"/>
            <jvmarg value="${javafx.lib}"/> <!-- Path to JavaFX libs -->
            <jvmarg value="--add-modules"/>
            <jvmarg value="javafx.controls,javafx.fxml,javafx.graphics"/> <!-- Required JavaFX modules -->
            <classpath refid="run.classpath"/>
        </java>
    </target>

    <!-- Mantén tu personalización existente -->
    <target name="-post-jar">
        <path id="run.classpath">
            <pathelement path="${build.classes.dir}"/>
            <fileset dir="${javafx.lib}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="dist/lib">
                <include name="*.jar"/>
            </fileset>
        </path>
    </target>
</project>